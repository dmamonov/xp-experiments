package util.collections;

/**
 * Resizable array list
 *
 * @test     xp://net.xp_framework.unittest.util.collections.VectorTest
 * @see      xp://lang.types.ArrayList
 * @purpose  IList implementation
 */
public class Vector<E> implements IList {
  protected E[] $elements;
  protected int $size;
  
  /**
   * Constructor
   *
   * @param   elements Initial elements to be in this vector - defaults to an empty list
   */
  public __construct(E[] $elements= []) {
    $this->elements= $elements;
    $this->size= sizeof($elements);
  }
  
  /**
   * []= overloading
   *
   */  
  public void operator[] (E $element) {
    $this->elements[]= $element;
    $this->size++;
  }

  /**
   * [offset]= overloading
   *
   */  
  public void operator[int $offset] (E $element) {
    if ($offset < 0 || $offset >= $this->size) {
      throw new IndexOutOfBoundsException('Offset ' ~ $index ~ ' out of bounds');
    }
    $this->elements[$offset]= $element;
  }

  /**
   * =[offset] overloading
   *
   */  
  public E operator[int $offset] () {
    if ($offset < 0 || $offset >= $this->size) {
      throw new IndexOutOfBoundsException('Offset ' ~ $index ~ ' out of bounds');
    }
    $this->elements[$offset]= $element;
  }
}
