package util.log;

/**
 * A singleton Logger
 *
 */
public class Logger {
  protected static self $instance;
  protected array<string, Category> $category;

  static {
    self::$instance= new self();
    self::$instance->category['default']= new Category();
  }
  
  /**
   * Private constructor to ensure this class cannot be instantiated
   * by means of "new".
   *
   */
  private final __construct() { 
    // Intentionally empty
  }
  
  /**
   * Retrieve logger instance
   *
   */
  public static self getInstance() {
    return self::$instance;
  }
  
  /**
   * Get a log category by its name. If there is no category by the given
   * name (or if the name argument is omitted), the default category is
   * returned.
   *
   */
  public Category getCategory(string $name= 'default') {
    return $this->category[isset($this->category[$name]) ? $name : 'default'];
  }
}
