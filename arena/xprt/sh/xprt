#!/bin/sh
#
# $Id$

if [ "$OS" = "Windows_NT" ]; then
  PATHSEP=';'
  DIRSEP='\'
else
  PATHSEP=':'
  DIRSEP='/'
fi

translate_path() {
  local base="$1"
  local path="$2"
  
  case "$path" in
    ~*) path=$HOME$DIRSEP${path#"~"} ;;    # ~/lib
    .*) path=$base$DIRSEP$path ;;          # ../lib, ./classes
  esac
  
  if [ "$OS" = "Windows_NT" ]; then
    echo $(cygpath -m "$path")
  else
    echo $path
  fi
}

add_path_file () {
  local base="$1"
  local file="$2"
  local includes=""
  
  for l in `grep -v ^# $file` ; do
    includes=$includes$(translate_path "$base" "$l")$PATHSEP
  done
  
  echo $includes
}

scan_path_files() {
  local dir="$1"
  local includes=""
  
  if [ ! -d "$dir" ] ; then 
    return ""; 
  fi
  
  for i in `ls "$dir"/*.pth 2>/dev/null` ; do
    includes=$includes$(add_path_file "$dir" "$i")
  done
  
  echo $includes
}

execute() {
  local base="$1"
  local runner="$2"
  local include="$3"

  local includes=$(scan_path_files "$base")

  if [ -z $includes ] ; then
    echo "*** Error loading boot class path in $base" >&2;
    return 1
  fi
  
  if [ ! -z "$include" ] ; then
    includes=$includes$include$PATHSEP
  fi

  local local_includes=$(scan_path_files ".")
  if [ -z $local_includes ] ; then
    includes=$includes"."
  else
    includes=$includes$local_includes
  fi
  
  echo "php -dinclude_path=\"$includes\" $(translate_path "$base" ".")$DIRSEP$runner.php"
}
