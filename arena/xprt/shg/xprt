#!/bin/sh
#
# $Id$

if [ "$OS" = "Windows_NT" ]; then
  PATHSEP=';'
  DIRSEP='\'
else
  PATHSEP=':'
  DIRSEP='/'
fi

translate_path() {
  local base="$1"
  local path="$2"
  
  case "$path" in
    ?:*) ;;                                # C:\xp
    \\*) ;;                                # \\filesrv\shares
    /*) ;;                                 # /usr/local/lib
    ~*) path=$HOME$DIRSEP${path#"~"} ;;    # ~/lib
    *) path=$base$DIRSEP$path ;;           # lib, ../lib, ./classes
  esac
  
  if [ "$OS" = "Windows_NT" ]; then
    echo $(cygpath -m "$path")
  else
    echo $path
  fi
}

add_path_file () {
  local base="$1"
  local file="$2"
  local includes=""

  for l in `grep -v ^# "$file"` ; do
    includes=$includes$(translate_path "$base" "$l")$PATHSEP
  done
  
  echo $includes
}

scan_path_files() {
  local dir="$1"
  local includes=""
  
  if [ ! -d "$dir" ] ; then 
    echo "Directory '$dir' does not exist" >&2
    return 1
  fi
  
  ls "$dir"/*.pth 2>/dev/null | (
    while read i ; do
      includes=$includes$(add_path_file "$dir" "$i")
    done
    echo $includes
  )
}

execute() {
  local base="$1"
  local runner="$2"
  local include="$3"
  local xppath="$1"
  local ifs="|"

  for line in `cat "$base"/xp.ini` ; do
    case "$line" in
      use=*)
        value=${line#*=}
        xppath=$(translate_path "$base" "$value")
      ;;
    esac
  done

  local includes=$(scan_path_files "$xppath")

  if [ -z "$includes" ] ; then
    echo "*** Error loading boot class path in $xppath" >&2;
    return 1
  fi
  
  if [ ! -z "$include" ] ; then
    includes=$includes$include$PATHSEP
  fi

  local local_includes=$(scan_path_files ".")
  if [ -z $local_includes ] ; then
    includes=$includes"."
  else
    includes=$includes$local_includes
  fi
  
  config=""
  executor="php"
  args="-dinclude_path=\"$includes\"${ifs}-dmagic_quotes_gpc=0"
  if [ -e "$xppath"/php.ini ] ; then
    for line in `cat "$xppath"/php.ini` ; do
      case "$line" in
        *=*)
          key=${line%=*}
          value=${line#*=}
          if [ "executor" = "$key" ]; then
            executor="$value"
          else 
            args="$args${ifs}-d$key=\"$value\""
          fi
        ;;
      esac
    done
  fi

  # DEBUG echo ${executor}${ifs}${args}${ifs}$(translate_path "$xppath"/bin ".")${runner}".php" >&2;
  echo ${executor}${ifs}${args}${ifs}$(translate_path "$xppath"/bin ".")${runner}".php"
}

# Initialize
OPTIND=0
INCLUDE=""
INCLUDE_PATH="" 
RUNNER="xp"

# Parse arguments
for arg in "$@" ; do
  if [ ! -z "$INCLUDE_ARG" ] ; then
    INCLUDE="$arg$INCLUDE_ARG$INCLUDE" ; INCLUDE_ARG=""
    OPTIND=`expr $OPTIND + 2`
    continue
  fi

  case $arg in
    -v)               # Display version
      RUNNER="xpv"
      OPTIND=$(expr $OPTIND + 1)
      ;;
    -cp)              # Add class path
      INCLUDE_ARG=${PATHSEP}
      ;;
    -e)               # Run source passed via command line
      RUNNER="xpe"
      OPTIND=$(expr $OPTIND + 1)
      ;;
    -xar)             # Run a xar
      RUNNER="xar"
      OPTIND=$(expr $OPTIND + 1)
      ;;
    -*)               # Any other arg
      echo "*** Invalid argument $arg"
      echo ${USAGE}
      exit
      ;;
    *)                # First arg we find that does not begin with a "-"
      break
      ;;
  esac
done
