001 RPL_WELCOME RFC2812 Welcome to the Internet Relay Network <nick>!<user>@<host> - The server sends Replies 001 to 004 to a user upon successful registration.
002 RPL_YOURHOST RFC2812 Your host is <servername>, running version <ver> - The server sends Replies 001 to 004 to a user upon successful registration.
003 RPL_CREATED RFC2812 This server was created <date> - The server sends Replies 001 to 004 to a user upon successful registration.
004 RPL_MYINFO RFC2812 <servername> <version> <available user modes> <available channel modes> - The server sends Replies 001 to 004 to a user upon successful registration.
#005 RPL_BOUNCE RFC2812 Try server <server name>, port <port number> - Sent by the server to a user to suggest an alternative server. This is often used when the connection is refused because the server is already full.
005 RPL_ISUPPORT
200 RPL_TRACELINK RFC1459 Link <version & debug level> <destination> <next server> 
200 RPL_TRACELINK RFC2812 Link <version & debug level> <destination> <next server> V<protocol version> <link uptime in seconds> <backstream sendq> <upstre - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first. RPL_TRACELINK is sent by any server which handles a TRACE message and has to pass it on to another server. The list of RPL_TRACELINKs sent in response to a TRACE command traversing the IRC network should reflect the actual connectivity of the servers themselves along that path.
201 RPL_TRACECONNECTING RFC1459 Try. <class> <server> 
201 RPL_TRACECONNECTING RFC2812 Try. <class> <server> - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first. Replies RPL_TRACEUNKNOWN, RPL_TRACECONNECTING and RPL_TRACEHANDSHAKE are all used for connections which have not been fully established and are either unknown, still attempting to connect or in the process of completing the 'server handshake'.
202 RPL_TRACEHANDSHAKE RFC1459 H.S. <class> <server> 
202 RPL_TRACEHANDSHAKE RFC2812 H.S. <class> <server> - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first. Replies RPL_TRACEUNKNOWN, RPL_TRACECONNECTING and RPL_TRACEHANDSHAKE are all used for connections which have not been fully established and are either unknown, still attempting to connect or in the process of completing the 'server handshake'.
203 RPL_TRACEUNKNOWN RFC1459 ???? <class> [<client IP address in dot form>] 
203 RPL_TRACEUNKNOWN RFC2812 ???? <class> [<client IP address in dot form>] - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first. Replies RPL_TRACEUNKNOWN, RPL_TRACECONNECTING and RPL_TRACEHANDSHAKE are all used for connections which have not been fully established and are either unknown, still attempting to connect or in the process of completing the 'server handshake'.
204 RPL_TRACEOPERATOR RFC1459 Oper <class> <nick> 
204 RPL_TRACEOPERATOR RFC2812 Oper <class> <nick> - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first.
205 RPL_TRACEUSER RFC1459 User <class> <nick> 
205 RPL_TRACEUSER RFC2812 User <class> <nick> - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first.
206 RPL_TRACESERVER RFC1459 Serv <class> <int>S <int>C <server> <nick!user|*!*>@<host|server> 
206 RPL_TRACESERVER RFC2812 Serv <class> <int>S <int>C <server> <nick!user|*!*>@<host|server> V<protocol version> - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first.
207 RPL_TRACESERVICE RFC2812 Service <class> <name> <type> <active type> - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first.
208 RPL_TRACENEWTYPE RFC1459 <newtype> 0 <client name> 
208 RPL_TRACENEWTYPE RFC2812 <newtype> 0 <client name> - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first. RPL_TRACENEWTYPE is to be used for any connection which does not fit in the other categories but is being displayed anyway.
209 RPL_TRACECLASS RFC2812 Class <class> <count> - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first.
210 RPL_TRACERECONNECT RFC2812 RFC2812 Unused.
211 RPL_STATSLINKINFO RFC1459 <linkname> <sendq> <sent messages> <sent bytes> <received messages> <received bytes> <time open> 
211 RPL_STATSLINKINFO RFC2812 <linkname> <sendq> <sent messages> <sent Kbytes> <received messages> <received Kbytes> <time open> - reports statistics on a connection. <linkname> identifies the particular connection, <sendq> is the amount of data that is queued and waiting to be sent <sent messages> the number of messages sent, and <sent Kbytes> the amount of data sent, in Kbytes. <received messages> and <received Kbytes> are the equivalent of <sent messages> and <sent Kbytes> for received data, respectively. <time open> indicates how long ago the connection was opened, in seconds.
212 RPL_STATSCOMMANDS RFC1459 <command> <count> 
212 RPL_STATSCOMMANDS RFC2812 <command> <count> <byte count> <remote count> - reports statistics on commands usage.
213 RPL_STATSCLINE RFC1459 C <host> * <name> <port> <class> 
213 RPL_STATSCLINE RFC2812 RFC2812 *Reserved*
214 RPL_STATSNLINE RFC1459 N <host> * <name> <port> <class> 
214 RPL_STATSNLINE RFC2812 RFC2812 *Reserved*
215 RPL_STATSILINE RFC1459 I <host> * <host> <port> <class> 
215 RPL_STATSILINE RFC2812 RFC2812 *Reserved*
216 RPL_STATSKLINE RFC1459 K <host> * <username> <port> <class> 
216 RPL_STATSKLINE RFC2812 RFC2812 *Reserved*
217 RPL_STATSQLINE RFC2812 RFC2812 *Reserved*
218 RPL_STATSYLINE RFC1459 Y <class> <ping frequency> <connect frequency> <max sendq> 
218 RPL_STATSYLINE RFC2812 RFC2812 *Reserved*
219 RPL_ENDOFSTATS RFC1459 <stats letter> :End of /STATS report 
219 RPL_ENDOFSTATS RFC2812 <stats letter> :End of STATS report 
221 RPL_UMODEIS RFC1459 <user mode string> 
221 RPL_UMODEIS RFC2812 <user mode string> - To answer a query about a client's own mode, RPL_UMODEIS is sent back.
231 RPL_SERVICEINFO RFC2812 RFC2812 *Reserved*
232 RPL_ENDOFSERVICES RFC2812 RFC2812 *Reserved*
233 RPL_SERVICE RFC2812 RFC2812 *Reserved*
234 RPL_SERVLIST RFC2812 <name> <server> <mask> <type> <hopcount> <info> 
235 RPL_SERVLISTEND RFC2812 <mask> <type> :End of service listing - When listing services in reply to a SERVLIST message, a server is required to send the list back using the RPL_SERVLIST and RPL_SERVLISTEND messages. A separate RPL_SERVLIST is sent for each service. After the services have been listed (or if none present) a RPL_SERVLISTEND MUST be sent.
240 RPL_STATSVLINE RFC2812 RFC2812 *Reserved*
241 RPL_STATSLLINE RFC1459 L <hostmask> * <servername> <maxdepth> 
241 RPL_STATSLLINE RFC2812 RFC2812 *Reserved*
242 RPL_STATSUPTIME RFC1459 :Server Up %d days %d:%02d:%02d 
242 RPL_STATSUPTIME RFC2812 :Server Up %d days %d:%02d:%02d - reports the server uptime.
243 RPL_STATSOLINE RFC1459 O <hostmask> * <name> 
243 RPL_STATSOLINE RFC2812 O <hostmask> * <name> - reports the allowed hosts from where user may become IRC operators.
244 RPL_STATSHLINE RFC1459 H <hostmask> * <servername> 
244 RPL_STATSHLINE RFC2812 RFC2812 *Reserved*
244 RPL_STATSSLINE RFC2812 RFC2812 *Reserved*
246 RPL_STATSPING RFC2812 RFC2812 *Reserved*
247 RPL_STATSBLINE RFC2812 RFC2812 *Reserved*
250 RPL_STATSDLINE RFC2812 RFC2812 *Reserved*
251 RPL_LUSERCLIENT RFC1459 :There are <integer> users and <integer> invisible on <integer> servers 
251 RPL_LUSERCLIENT RFC2812 :There are <integer> users and <integer> services on <integer> servers - In processing an LUSERS message, the server sends a set of replies from RPL_LUSERCLIENT, RPL_LUSEROP, RPL_USERUNKNOWN, RPL_LUSERCHANNELS and RPL_LUSERME. When replying, a server MUST send back RPL_LUSERCLIENT and RPL_LUSERME. The other replies are only sent back if a non-zero count is found for them.
252 RPL_LUSEROP RFC1459 <integer> :operator(s) online 
252 RPL_LUSEROP RFC2812 <integer> :operator(s) online - In processing an LUSERS message, the server sends a set of replies from RPL_LUSERCLIENT, RPL_LUSEROP, RPL_USERUNKNOWN, RPL_LUSERCHANNELS and RPL_LUSERME. When replying, a server MUST send back RPL_LUSERCLIENT and RPL_LUSERME. The other replies are only sent back if a non-zero count is found for them.
253 RPL_LUSERUNKNOWN RFC1459 <integer> :unknown connection(s) 
253 RPL_LUSERUNKNOWN RFC2812 <integer> :unknown connection(s) - In processing an LUSERS message, the server sends a set of replies from RPL_LUSERCLIENT, RPL_LUSEROP, RPL_USERUNKNOWN, RPL_LUSERCHANNELS and RPL_LUSERME. When replying, a server MUST send back RPL_LUSERCLIENT and RPL_LUSERME. The other replies are only sent back if a non-zero count is found for them.
254 RPL_LUSERCHANNELS RFC1459 <integer> :channels formed 
254 RPL_LUSERCHANNELS RFC2812 <integer> :channels formed - In processing an LUSERS message, the server sends a set of replies from RPL_LUSERCLIENT, RPL_LUSEROP, RPL_USERUNKNOWN, RPL_LUSERCHANNELS and RPL_LUSERME. When replying, a server MUST send back RPL_LUSERCLIENT and RPL_LUSERME. The other replies are only sent back if a non-zero count is found for them.
255 RPL_LUSERME RFC1459 :I have <integer> clients and <integer> servers 
255 RPL_LUSERME RFC2812 :I have <integer> clients and <integer> servers - In processing an LUSERS message, the server sends a set of replies from RPL_LUSERCLIENT, RPL_LUSEROP, RPL_USERUNKNOWN, RPL_LUSERCHANNELS and RPL_LUSERME. When replying, a server MUST send back RPL_LUSERCLIENT and RPL_LUSERME. The other replies are only sent back if a non-zero count is found for them.
256 RPL_ADMINME RFC1459 <server> :Administrative info 
256 RPL_ADMINME RFC2812 <server> :Administrative info - When replying to an ADMIN message, a server is expected to use replies RPL_ADMINME through to RPL_ADMINEMAIL and provide a text message with each. For RPL_ADMINLOC1 a description of what city, state and country the server is in is expected, followed by details of the institution (RPL_ADMINLOC2) and finally the administrative contact for the server (an email address here is REQUIRED) in RPL_ADMINEMAIL.
257 RPL_ADMINLOC1 RFC1459 :<admin info> 
257 RPL_ADMINLOC1 RFC2812 :<admin info> - When replying to an ADMIN message, a server is expected to use replies RPL_ADMINME through to RPL_ADMINEMAIL and provide a text message with each. For RPL_ADMINLOC1 a description of what city, state and country the server is in is expected, followed by details of the institution (RPL_ADMINLOC2) and finally the administrative contact for the server (an email address here is REQUIRED) in RPL_ADMINEMAIL.
258 RPL_ADMINLOC2 RFC1459 :<admin info> 
258 RPL_ADMINLOC2 RFC2812 :<admin info> - When replying to an ADMIN message, a server is expected to use replies RPL_ADMINME through to RPL_ADMINEMAIL and provide a text message with each. For RPL_ADMINLOC1 a description of what city, state and country the server is in is expected, followed by details of the institution (RPL_ADMINLOC2) and finally the administrative contact for the server (an email address here is REQUIRED) in RPL_ADMINEMAIL.
259 RPL_ADMINEMAIL RFC1459 :<admin info> 
259 RPL_ADMINEMAIL RFC2812 :<admin info> - When replying to an ADMIN message, a server is expected to use replies RPL_ADMINME through to RPL_ADMINEMAIL and provide a text message with each. For RPL_ADMINLOC1 a description of what city, state and country the server is in is expected, followed by details of the institution (RPL_ADMINLOC2) and finally the administrative contact for the server (an email address here is REQUIRED) in RPL_ADMINEMAIL.
261 RPL_TRACELOG RFC1459 File <logfile> <debug level> 
261 RPL_TRACELOG RFC2812 File <logfile> <debug level> - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first.
262 RPL_TRACEEND RFC2812 <server name> <version & debug level> :End of TRACE - The RPL_TRACE* are all returned by the server in response to the TRACE message. How many are returned is dependent on the TRACE message and whether it was sent by an operator or not. There is no predefined order for which occurs first. RPL_TRACEEND is sent to indicate the end of the list.
263 RPL_TRYAGAIN RFC2812 <command> :Please wait a while and try again. - When a server drops a command without processing it, it MUST use the reply RPL_TRYAGAIN to inform the originating client.

300 RPL_NONE RFC1459 RFC2812 
300 RPL_NONE RFC2812 RFC2812 *Reserved*
301 RPL_AWAY RFC1459 <nick> :<away message> 
301 RPL_AWAY RFC2812 <nick> :<away message> - These replies are used with the AWAY command (if allowed). RPL_AWAY is sent to any client sending a PRIVMSG to a client which is away. RPL_AWAY is only sent by the server to which the client is connected.
302 RPL_USERHOST RFC1459 :[<reply>{<space><reply>}] 
302 RPL_USERHOST RFC2812 :*1<reply> *( <space> <reply> ) - Reply format used by USERHOST to list replies to the query list. The reply string is composed as follows: { reply = nickname [ * ] = ( +|- ) hostname } The * indicates whether the client has registered as an Operator. The - or + characters represent whether the client has set an AWAY message or not respectively.
303 RPL_ISON RFC1459 :[<nick> {<space><nick>}] 
303 RPL_ISON RFC2812 :*1<nick> *( <space> <nick> ) - Reply format used by ISON to list replies to the query list.
305 RPL_UNAWAY RFC1459 :You are no longer marked as being away 
305 RPL_UNAWAY RFC2812 :You are no longer marked as being away - These replies are used with the AWAY command (if allowed). Replies RPL_UNAWAY and RPL_NOWAWAY are sent when the client removes and sets an AWAY message.
306 RPL_NOWAWAY RFC1459 :You have been marked as being away 
306 RPL_NOWAWAY RFC2812 :You have been marked as being away - These replies are used with the AWAY command (if allowed). Replies RPL_UNAWAY and RPL_NOWAWAY are sent when the client removes and sets an AWAY message.
311 RPL_WHOISUSER RFC1459 <nick> <user> <host> * :<real name> 
311 RPL_WHOISUSER RFC2812 <nick> <user> <host> * :<real name> - Replies 311 - 313, 317 - 319 are all replies generated in response to a WHOIS message. The * in RPL_WHOISUSER is there as the literal character and not as a wild card.
312 RPL_WHOISSERVER RFC1459 <nick> <server> :<server info> 
312 RPL_WHOISSERVER RFC2812 <nick> <server> :<server info> - Replies 311 - 313, 317 - 319 are all replies generated in response to a WHOIS message.
313 RPL_WHOISOPERATOR RFC1459 <nick> :is an IRC operator 
313 RPL_WHOISOPERATOR RFC2812 <nick> :is an IRC operator - Replies 311 - 313, 317 - 319 are all replies generated in response to a WHOIS message.
314 RPL_WHOWASUSER RFC1459 <nick> <user> <host> * :<real name> 
314 RPL_WHOWASUSER RFC2812 <nick> <user> <host> * :<real name> - When replying to a WHOWAS message, a server MUST use the replies RPL_WHOWASUSER, RPL_WHOISSERVER or ERR_WASNOSUCHNICK for each nickname in the presented list. At the end of all reply batches, there MUST be RPL_ENDOFWHOWAS (even if there was only one reply and it was an error).
315 RPL_ENDOFWHO RFC1459 <name> :End of /WHO list 
315 RPL_ENDOFWHO RFC2812 <name> :End of WHO list - The RPL_WHOREPLY and RPL_ENDOFWHO pair are used to answer a WHO message. The RPL_WHOREPLY is only sent if there is an appropriate match to the WHO query. If there is a list of parameters supplied with a WHO message, a RPL_ENDOFWHO MUST be sent after processing each list item with <name> being the item.
316 RPL_WHOISCHANOP RFC2812 RFC2812 *Reserved*
317 RPL_WHOISIDLE RFC1459 <nick> <integer> :seconds idle 
317 RPL_WHOISIDLE RFC2812 <nick> <integer> :seconds idle - Replies 311 - 313, 317 - 319 are all replies generated in response to a WHOIS message.
318 RPL_ENDOFWHOIS RFC1459 <nick> :End of /WHOIS list 
318 RPL_ENDOFWHOIS RFC2812 <nick> :End of WHOIS list - Replies 311 - 313, 317 - 319 are all replies generated in response to a WHOIS message. The RPL_ENDOFWHOIS reply is used to mark the end of processing a WHOIS message.
319 RPL_WHOISCHANNELS RFC1459 <nick> :{[@|+]<channel><space>} 
319 RPL_WHOISCHANNELS RFC2812 <nick> :*( ( @|+ ) <channel> <space> ) - Replies 311 - 313, 317 - 319 are all replies generated in response to a WHOIS message. For each reply set, only RPL_WHOISCHANNELS may appear more than once (for long lists of channel names). The @ and + characters next to the channel name indicate whether a client is a channel operator or has been granted permission to speak on a moderated channel.
321 RPL_LISTSTART RFC1459 Channel :Users Name 
321 RPL_LISTSTART RFC2812 RFC2812 - Obsolete. Not used.
322 RPL_LIST RFC1459 <channel> <# visible> :<topic> 
322 RPL_LIST RFC2812 <channel> <# visible> :<topic> - Replies RPL_LIST, RPL_LISTEND mark the actual replies with data and end of the server's response to a LIST command. If there are no channels available to return, only the end reply MUST be sent.
323 RPL_LISTEND RFC1459 :End of /LIST 
323 RPL_LISTEND RFC2812 :End of LIST - Replies RPL_LIST, RPL_LISTEND mark the actual replies with data and end of the server's response to a LIST command. If there are no channels available to return, only the end reply MUST be sent.
324 RPL_CHANNELMODEIS RFC1459 <channel> <mode> <mode params> 
324 RPL_CHANNELMODEIS RFC2812 <channel> <mode> <mode params> 
325 RPL_UNIQOPIS RFC2812 <channel> <nickname> 
331 RPL_NOTOPIC RFC1459 <channel> :No topic is set 
331 RPL_NOTOPIC RFC2812 <channel> :No topic is set - When sending a TOPIC message to determine the channel topic, one of two replies is sent. If the topic is set, RPL_TOPIC is sent back else RPL_NOTOPIC.
332 RPL_TOPIC RFC1459 <channel> :<topic> 
332 RPL_TOPIC RFC2812 <channel> :<topic> - When sending a TOPIC message to determine the channel topic, one of two replies is sent. If the topic is set, RPL_TOPIC is sent back else RPL_NOTOPIC.
341 RPL_INVITING RFC1459 <channel> <nick> 
341 RPL_INVITING RFC2812 <channel> <nick> - Returned by the server to indicate that the attempted INVITE message was successful and is being passed onto the end client.
342 RPL_SUMMONING RFC1459 <user> :Summoning user to IRC 
342 RPL_SUMMONING RFC2812 <user> :Summoning user to IRC - Returned by a server answering a SUMMON message to indicate that it is summoning that user.
346 RPL_INVITELIST RFC2812 <channel> <invitemask> - When listing the 'invitations masks' for a given channel, a server is required to send the list back using the RPL_INVITELIST and RPL_ENDOFINVITELIST messages. A separate RPL_INVITELIST is sent for each active mask. After the masks have been listed (or if none present) a RPL_ENDOFINVITELIST MUST be sent.
347 RPL_ENDOFINVITELIST RFC2812 <channel> :End of channel invite list - When listing the 'invitations masks' for a given channel, a server is required to send the list back using the RPL_INVITELIST and RPL_ENDOFINVITELIST messages. A separate RPL_INVITELIST is sent for each active mask. After the masks have been listed (or if none present) a RPL_ENDOFINVITELIST MUST be sent.
348 RPL_EXCEPTLIST RFC2812 <channel> <exceptionmask> - When listing the 'exception masks' for a given channel, a server is required to send the list back using the RPL_EXCEPTLIST and RPL_ENDOFEXCEPTLIST messages. A separate RPL_EXCEPTLIST is sent for each active mask. After the masks have been listed (or if none present) a RPL_ENDOFEXCEPTLIST MUST be sent.
349 RPL_ENDOFEXCEPTLIST RFC2812 <channel> :End of channel exception list - When listing the 'exception masks' for a given channel, a server is required to send the list back using the RPL_EXCEPTLIST and RPL_ENDOFEXCEPTLIST messages. A separate RPL_EXCEPTLIST is sent for each active mask. After the masks have been listed (or if none present) a RPL_ENDOFEXCEPTLIST MUST be sent.
351 RPL_VERSION RFC1459 <version>.<debuglevel> <server> :<comments> 
351 RPL_VERSION RFC2812 <version>.<debuglevel> <server> :<comments> - Reply by the server showing its version details. The <version> is the version of the software being used (including any patchlevel revisions) and the <debuglevel> is used to indicate if the server is running in debug mode. The comments field may contain any comments about the version or further version details.
352 RPL_WHOREPLY RFC1459 <channel> <user> <host> <server> <nick> <H|G>[*][@|+] :<hopcount> <real name> 
352 RPL_WHOREPLY RFC2812 <channel> <user> <host> <server> <nick> ( H|G > [*] [ ( @|+ ) ] :<hopcount> <real name> - The RPL_WHOREPLY and RPL_ENDOFWHO pair are used to answer a WHO message. The RPL_WHOREPLY is only sent if there is an appropriate match to the WHO query. If there is a list of parameters supplied with a WHO message, a RPL_ENDOFWHO MUST be sent after processing each list item with <name> being the item.
353 RPL_NAMREPLY RFC1459 <channel> :[[@|+]<nick> [[@|+]<nick> [...]]] 
353 RPL_NAMREPLY RFC2812 =|*|@ <channel> :[ @|+ ] <nick> *( <space> [ @|+ ] <nick> ) - @ is used for secret channels, * for private channels, and = for others (public channels).
361 RPL_KILLDONE RFC2812 RFC2812 *Reserved*
362 RPL_CLOSING RFC2812 RFC2812 *Reserved*
363 RPL_CLOSEEND RFC2812 RFC2812 *Reserved*
364 RPL_LINKS RFC1459 <mask> <server> :<hopcount> <server info> 
364 RPL_LINKS RFC2812 <mask> <server> :<hopcount> <server info> - In replying to the LINKS message, a server MUST send replies back using the RPL_LINKS numeric and mark the end of the list using an RPL_ENDOFLINKS reply.
365 RPL_ENDOFLINKS RFC1459 <mask> :End of /LINKS list 
365 RPL_ENDOFLINKS RFC2812 <mask> :End of LINKS list - In replying to the LINKS message, a server MUST send replies back using the RPL_LINKS numeric and mark the end of the list using an RPL_ENDOFLINKS reply.
366 RPL_ENDOFNAMES RFC1459 <channel> :End of /NAMES list 
366 RPL_ENDOFNAMES RFC2812 <channel> :End of NAMES list - To reply to a NAMES message, a reply pair consisting of RPL_NAMREPLY and RPL_ENDOFNAMES is sent by the server back to the client. If there is no channel found as in the query, then only RPL_ENDOFNAMES is returned. The exception to this is when a NAMES message is sent with no parameters and all visible channels and contents are sent back in a series of RPL_NAMEREPLY messages with a RPL_ENDOFNAMES to mark the end.
367 RPL_BANLIST RFC1459 <channel> <banid> 
367 RPL_BANLIST RFC2812 <channel> <banmask> - When listing the active 'bans' for a given channel, a server is required to send the list back using the RPL_BANLIST and RPL_ENDOFBANLIST messages. A separate RPL_BANLIST is sent for each active banmask. After the banmasks have been listed (or if none present) a RPL_ENDOFBANLIST MUST be sent.
368 RPL_ENDOFBANLIST RFC1459 <channel> :End of channel ban list 
368 RPL_ENDOFBANLIST RFC2812 <channel> :End of channel ban list - When listing the active 'bans' for a given channel, a server is required to send the list back using the RPL_BANLIST and RPL_ENDOFBANLIST messages. A separate RPL_BANLIST is sent for each active banmask. After the banmasks have been listed (or if none present) a RPL_ENDOFBANLIST MUST be sent.
369 RPL_ENDOFWHOWAS RFC1459 <nick> :End of WHOWAS 
369 RPL_ENDOFWHOWAS RFC2812 <nick> :End of WHOWAS - When replying to a WHOWAS message, a server MUST use the replies RPL_WHOWASUSER, RPL_WHOISSERVER or ERR_WASNOSUCHNICK for each nickname in the presented list. At the end of all reply batches, there MUST be RPL_ENDOFWHOWAS (even if there was only one reply and it was an error).
371 RPL_INFO RFC1459 :<string> 
371 RPL_INFO RFC2812 :<string> - A server responding to an INFO message is required to send all its 'info' in a series of RPL_INFO messages with a RPL_ENDOFINFO reply to indicate the end of the replies.
372 RPL_MOTD RFC1459 :- <text> 
372 RPL_MOTD RFC2812 :- <text> - When responding to the MOTD message and the MOTD file is found, the file is displayed line by line, with each line no longer than 80 characters, using RPL_MOTD format replies. These MUST be surrounded by a RPL_MOTDSTART (before the RPL_MOTDs) and an RPL_ENDOFMOTD (after).
373 RPL_INFOSTART RFC2812 RFC2812 *Reserved*
374 RPL_ENDOFINFO RFC1459 :End of /INFO list 
374 RPL_ENDOFINFO RFC2812 :End of INFO list - A server responding to an INFO message is required to send all its 'info' in a series of RPL_INFO messages with a RPL_ENDOFINFO reply to indicate the end of the replies.
375 RPL_MOTDSTART RFC1459 :- <server> Message of the day - 
375 RPL_MOTDSTART RFC2812 :- <server> Message of the day - - When responding to the MOTD message and the MOTD file is found, the file is displayed line by line, with each line no longer than 80 characters, using RPL_MOTD format replies. These MUST be surrounded by a RPL_MOTDSTART (before the RPL_MOTDs) and an RPL_ENDOFMOTD (after).
376 RPL_ENDOFMOTD RFC1459 :End of /MOTD command 
376 RPL_ENDOFMOTD RFC2812 :End of MOTD command - When responding to the MOTD message and the MOTD file is found, the file is displayed line by line, with each line no longer than 80 characters, using RPL_MOTD format replies. These MUST be surrounded by a RPL_MOTDSTART (before the RPL_MOTDs) and an RPL_ENDOFMOTD (after).
381 RPL_YOUREOPER RFC1459 :You are now an IRC operator 
381 RPL_YOUREOPER RFC2812 :You are now an IRC operator - RPL_YOUREOPER is sent back to a client which has just successfully issued an OPER message and gained operator status.
382 RPL_REHASHING RFC1459 <config file> :Rehashing 
382 RPL_REHASHING RFC2812 <config file> :Rehashing - If the REHASH option is used and an operator sends a REHASH message, an RPL_REHASHING is sent back to the operator.
383 RPL_YOURESERVICE RFC2812 You are service <servicename> - Sent by the server to a service upon successful registration.
384 RPL_MYPORTIS RFC2812 RFC2812 *Reserved*
391 RPL_TIME RFC1459 <server> :<string showing server's local time> 
391 RPL_TIME RFC2812 <server> :<string showing server's local time> - When replying to the TIME message, a server MUST send the reply using the RPL_TIME format above. The string showing the time need only contain the correct day and time there. There is no further requirement for the time string.
392 RPL_USERSSTART RFC1459 :UserID Terminal Host 
392 RPL_USERSSTART RFC2812 :UserID Terminal Host - If the USERS message is handled by a server, the replies RPL_USERSTART, RPL_USERS, RPL_ENDOFUSERS and RPL_NOUSERS are used. RPL_USERSSTART MUST be sent first, following by either a sequence of RPL_USERS or a single RPL_NOUSER. Following this is RPL_ENDOFUSERS.
393 RPL_USERS RFC1459 :%-8s %-9s %-8s 
393 RPL_USERS RFC2812 :<username> <ttyline> <hostname> - If the USERS message is handled by a server, the replies RPL_USERSTART, RPL_USERS, RPL_ENDOFUSERS and RPL_NOUSERS are used. RPL_USERSSTART MUST be sent first, following by either a sequence of RPL_USERS or a single RPL_NOUSER. Following this is RPL_ENDOFUSERS.
394 RPL_ENDOFUSERS RFC1459 :End of users 
394 RPL_ENDOFUSERS RFC2812 :End of users - If the USERS message is handled by a server, the replies RPL_USERSTART, RPL_USERS, RPL_ENDOFUSERS and RPL_NOUSERS are used. RPL_USERSSTART MUST be sent first, following by either a sequence of RPL_USERS or a single RPL_NOUSER. Following this is RPL_ENDOFUSERS.
395 RPL_NOUSERS RFC1459 :Nobody logged in 
395 RPL_NOUSERS RFC2812 :Nobody logged in - If the USERS message is handled by a server, the replies RPL_USERSTART, RPL_USERS, RPL_ENDOFUSERS and RPL_NOUSERS are used. RPL_USERSSTART MUST be sent first, following by either a sequence of RPL_USERS or a single RPL_NOUSER. Following this is RPL_ENDOFUSERS.

401 ERR_NOSUCHNICK RFC1459 <nickname> :No such nick/channel 
401 ERR_NOSUCHNICK RFC2812 <nickname> :No such nick/channel - Used to indicate the nickname parameter supplied to a command is currently unused.
402 ERR_NOSUCHSERVER RFC1459 <server name> :No such server 
402 ERR_NOSUCHSERVER RFC2812 <server name> :No such server - Used to indicate the server name given currently does not exist.
403 ERR_NOSUCHCHANNEL RFC1459 <channel name> :No such channel 
403 ERR_NOSUCHCHANNEL RFC2812 <channel name> :No such channel - Used to indicate the given channel name is invalid.
404 ERR_CANNOTSENDTOCHAN RFC1459 <channel name> :Cannot send to channel 
404 ERR_CANNOTSENDTOCHAN RFC2812 <channel name> :Cannot send to channel - Sent to a user who is either (a) not on a channel which is mode +n or (b) not a chanop (or mode +v) on a channel which has mode +m set or where the user is banned and is trying to send a PRIVMSG message to that channel.
405 ERR_TOOMANYCHANNELS RFC1459 <channel name> :You have joined too many channels 
405 ERR_TOOMANYCHANNELS RFC2812 <channel name> :You have joined too many channels - Sent to a user when they have joined the maximum number of allowed channels and they try to join another channel.
406 ERR_WASNOSUCHNICK RFC1459 <nickname> :There was no such nickname 
406 ERR_WASNOSUCHNICK RFC2812 <nickname> :There was no such nickname - Returned by WHOWAS to indicate there is no history information for that nickname.
407 ERR_TOOMANYTARGETS RFC1459 <target> :Duplicate recipients. No message delivered 
407 ERR_TOOMANYTARGETS RFC2812 <target> :<error code> recipients. <abort message> - Returned to a client which is attempting to send a PRIVMSG/NOTICE using the user@host destination format and for a user@host which has several occurrences. = Returned to a client which trying to send a PRIVMSG/NOTICE to too many recipients. = Returned to a client which is attempting to JOIN a safe channel using the shortname when there are more than one such channel.
408 ERR_NOSUCHSERVICE RFC2812 <service name> :No such service - Returned to a client which is attempting to send a SQUERY to a service which does not exist.
409 ERR_NOORIGIN RFC1459 :No origin specified 
409 ERR_NOORIGIN RFC2812 :No origin specified - PING or PONG message missing the originator parameter.
411 ERR_NORECIPIENT RFC1459 :No recipient given (<command>) 
411 ERR_NORECIPIENT RFC2812 :No recipient given (<command>) - 412 - 415 are returned by PRIVMSG to indicate that the message wasn't delivered for some reason. ERR_NOTOPLEVEL and ERR_WILDTOPLEVEL are errors that are returned when an invalid use of PRIVMSG $<server> or PRIVMSG #<host> is attempted.
412 ERR_NOTEXTTOSEND RFC1459 :No text to send 
412 ERR_NOTEXTTOSEND RFC2812 :No text to send - 412 - 415 are returned by PRIVMSG to indicate that the message wasn't delivered for some reason. ERR_NOTOPLEVEL and ERR_WILDTOPLEVEL are errors that are returned when an invalid use of PRIVMSG $<server> or PRIVMSG #<host> is attempted.
413 ERR_NOTOPLEVEL RFC1459 <mask> :No toplevel domain specified 
413 ERR_NOTOPLEVEL RFC2812 <mask> :No toplevel domain specified - 412 - 415 are returned by PRIVMSG to indicate that the message wasn't delivered for some reason. ERR_NOTOPLEVEL and ERR_WILDTOPLEVEL are errors that are returned when an invalid use of PRIVMSG $<server> or PRIVMSG #<host> is attempted.
414 ERR_WILDTOPLEVEL RFC1459 <mask> :Wildcard in toplevel domain 
414 ERR_WILDTOPLEVEL RFC2812 <mask> :Wildcard in toplevel domain - 412 - 415 are returned by PRIVMSG to indicate that the message wasn't delivered for some reason. ERR_NOTOPLEVEL and ERR_WILDTOPLEVEL are errors that are returned when an invalid use of PRIVMSG $<server> or PRIVMSG #<host> is attempted.
415 ERR_BADMASK RFC2812 <mask> :Bad Server/host mask - 412 - 415 are returned by PRIVMSG to indicate that the message wasn't delivered for some reason. ERR_NOTOPLEVEL and ERR_WILDTOPLEVEL are errors that are returned when an invalid use of PRIVMSG $<server> or PRIVMSG #<host> is attempted.
421 ERR_UNKNOWNCOMMAND RFC1459 <command> :Unknown command 
421 ERR_UNKNOWNCOMMAND RFC2812 <command> :Unknown command - Returned to a registered client to indicate that the command sent is unknown by the server.
422 ERR_NOMOTD RFC1459 :MOTD File is missing 
422 ERR_NOMOTD RFC2812 :MOTD File is missing - Server's MOTD file could not be opened by the server.
423 ERR_NOADMININFO RFC1459 <server> :No administrative info available 
423 ERR_NOADMININFO RFC2812 <server> :No administrative info available - Returned by a server in response to an ADMIN message when there is an error in finding the appropriate information.
424 ERR_FILEERROR RFC1459 :File error doing <file op> on <file> 
424 ERR_FILEERROR RFC2812 :File error doing <file op> on <file> - Generic error message used to report a failed file operation during the processing of a message.
431 ERR_NONICKNAMEGIVEN RFC1459 :No nickname given 
431 ERR_NONICKNAMEGIVEN RFC2812 :No nickname given - Returned when a nickname parameter expected for a command and isn't found.
432 ERR_ERRONEUSNICKNAME RFC1459 <nick> :Erroneus nickname 
432 ERR_ERRONEUSNICKNAME RFC2812 <nick> :Erroneous nickname - Returned after receiving a NICK message which contains characters which do not fall in the defined set. See section 2.3.1 for details on valid nicknames.
433 ERR_NICKNAMEINUSE RFC1459 <nick> :Nickname is already in use 
433 ERR_NICKNAMEINUSE RFC2812 <nick> :Nickname is already in use - Returned when a NICK message is processed that results in an attempt to change to a currently existing nickname.
436 ERR_NICKCOLLISION RFC1459 <nick> :Nickname collision KILL 
436 ERR_NICKCOLLISION RFC2812 <nick> :Nickname collision KILL from <user>@<host> - Returned by a server to a client when it detects a nickname collision (registered of a NICK that already exists by another server).
437 ERR_UNAVAILRESOURCE RFC2812 <nick/channel> :Nick/channel is temporarily unavailable - Returned by a server to a user trying to join a channel currently blocked by the channel delay mechanism. = Returned by a server to a user trying to change nickname when the desired nickname is blocked by the nick delay mechanism.
441 ERR_USERNOTINCHANNEL RFC1459 <nick> <channel> :They aren't on that channel 
441 ERR_USERNOTINCHANNEL RFC2812 <nick> <channel> :They aren't on that channel - Returned by the server to indicate that the target user of the command is not on the given channel.
442 ERR_NOTONCHANNEL RFC1459 <channel> :You're not on that channel 
442 ERR_NOTONCHANNEL RFC2812 <channel> :You're not on that channel - Returned by the server whenever a client tries to perform a channel affecting command for which the client isn't a member.
443 ERR_USERONCHANNEL RFC1459 <user> <channel> :is already on channel 
443 ERR_USERONCHANNEL RFC2812 <user> <channel> :is already on channel - Returned when a client tries to invite a user to a channel they are already on.
444 ERR_NOLOGIN RFC1459 <user> :User not logged in 
444 ERR_NOLOGIN RFC2812 <user> :User not logged in - Returned by the summon after a SUMMON command for a user was unable to be performed since they were not logged in.
445 ERR_SUMMONDISABLED RFC1459 :SUMMON has been disabled 
445 ERR_SUMMONDISABLED RFC2812 :SUMMON has been disabled - Returned as a response to the SUMMON command. MUST be returned by any server which doesn't implement it.
446 ERR_USERSDISABLED RFC1459 :USERS has been disabled 
446 ERR_USERSDISABLED RFC2812 :USERS has been disabled - Returned as a response to the USERS command. MUST be returned by any server which does not implement it.
451 ERR_NOTREGISTERED RFC1459 :You have not registered 
451 ERR_NOTREGISTERED RFC2812 :You have not registered - Returned by the server to indicate that the client MUST be registered before the server will allow it to be parsed in detail.
461 ERR_NEEDMOREPARAMS RFC1459 <command> :Not enough parameters 
461 ERR_NEEDMOREPARAMS RFC2812 <command> :Not enough parameters - Returned by the server by numerous commands to indicate to the client that it didn't supply enough parameters.
462 ERR_ALREADYREGISTRED RFC1459 :You may not reregister 
462 ERR_ALREADYREGISTRED RFC2812 :Unauthorized command (already registered) - Returned by the server to any link which tries to change part of the registered details (such as password or user details from second USER message).
463 ERR_NOPERMFORHOST RFC1459 :Your host isn't among the privileged 
463 ERR_NOPERMFORHOST RFC2812 :Your host isn't among the privileged - Returned to a client which attempts to register with a server which does not been setup to allow connections from the host the attempted connection is tried.
464 ERR_PASSWDMISMATCH RFC1459 :Password incorrect 
464 ERR_PASSWDMISMATCH RFC2812 :Password incorrect - Returned to indicate a failed attempt at registering a connection for which a password was required and was either not given or incorrect.
465 ERR_YOUREBANNEDCREEP RFC1459 :You are banned from this server 
465 ERR_YOUREBANNEDCREEP RFC2812 :You are banned from this server - Returned after an attempt to connect and register yourself with a server which has been setup to explicitly deny connections to you.
466 ERR_YOUWILLBEBANNED RFC2812 RFC2812 - Sent by a server to a user to inform that access to the server will soon be denied.
467 ERR_KEYSET RFC1459 <channel> :Channel key already set 
467 ERR_KEYSET RFC2812 <channel> :Channel key already set 
471 ERR_CHANNELISFULL RFC1459 <channel> :Cannot join channel (+l) 
471 ERR_CHANNELISFULL RFC2812 <channel> :Cannot join channel (+l) 
472 ERR_UNKNOWNMODE RFC1459 <char> :is unknown mode char to me 
472 ERR_UNKNOWNMODE RFC2812 <char> :is unknown mode char to me for <channel> 
473 ERR_INVITEONLYCHAN RFC1459 <channel> :Cannot join channel (+i) 
473 ERR_INVITEONLYCHAN RFC2812 <channel> :Cannot join channel (+i) 
474 ERR_BANNEDFROMCHAN RFC1459 <channel> :Cannot join channel (+b) 
474 ERR_BANNEDFROMCHAN RFC2812 <channel> :Cannot join channel (+b) 
475 ERR_BADCHANNELKEY RFC1459 <channel> :Cannot join channel (+k) 
475 ERR_BADCHANNELKEY RFC2812 <channel> :Cannot join channel (+k) 
476 ERR_BADCHANMASK RFC2812 <channel> :Bad Channel Mask 
477 ERR_NOCHANMODES RFC2812 <channel> :Channel doesn't support modes 
478 ERR_BANLISTFULL RFC2812 <channel> <char> :Channel list is full 
481 ERR_NOPRIVILEGES RFC1459 :Permission Denied- You're not an IRC operator 
481 ERR_NOPRIVILEGES RFC2812 :Permission Denied- You're not an IRC operator - Any command requiring operator privileges to operate MUST return this error to indicate the attempt was unsuccessful.
482 ERR_CHANOPRIVSNEEDED RFC1459 <channel> :You're not channel operator 
482 ERR_CHANOPRIVSNEEDED RFC2812 <channel> :You're not channel operator - Any command requiring 'chanop' privileges (such as MODE messages) MUST return this error if the client making the attempt is not a chanop on the specified channel.
483 ERR_CANTKILLSERVER RFC1459 :You cant kill a server! 
483 ERR_CANTKILLSERVER RFC2812 :You can't kill a server! - Any attempts to use the KILL command on a server are to be refused and this error returned directly to the client.
484 ERR_RESTRICTED RFC2812 :Your connection is restricted! - Sent by the server to a user upon connection to indicate the restricted nature of the connection (user mode +r).
485 ERR_UNIQOPPRIVSNEEDED RFC2812 :You're not the original channel operator - Any MODE requiring channel creator privileges MUST return this error if the client making the attempt is not a chanop on the specified channel.
491 ERR_NOOPERHOST RFC1459 :No O-lines for your host 
491 ERR_NOOPERHOST RFC2812 :No O-lines for your host - If a client sends an OPER message and the server has not been configured to allow connections from the client's host as an operator, this error MUST be returned.

501 ERR_UMODEUNKNOWNFLAG RFC1459 :Unknown MODE flag 
501 ERR_UMODEUNKNOWNFLAG RFC2812 :Unknown MODE flag - Returned by the server to indicate that a MODE message was sent with a nickname parameter and that the a mode flag sent was not recognized.
502 ERR_USERSDONTMATCH RFC1459 :Cant change mode for other users 
502 ERR_USERSDONTMATCH RFC2812 :Cannot change mode for other users - Error sent to any user trying to view or change the user mode for a user other than themselves.
