This is a patched version of Bcompiler 0.8.1:
I added a function to store oel opcode arrays.
- bcompiler_write_oel_oparray(resource<oel op array>) in only bcompiler.c is patched

Original: bcompiler README
--------------------------------------
Notes:

1.Compiling on an old version of PHP4.
2.Using the example compiler
3.Known issues

-------------------------------------
1.Compiling on an old version of PHP4.

Note: Does not support bz compressed encoded files.

Before running phpize you must copy the old config.m4 and Makefile.in into place

cp config.m4.old config.m4
cp Makefile.in.old Makefile.in
-------------------------------------
2.Using the example compiler

I wrote a rough compiler to compiler classes (and all there inherited information) into bytecodes automatically. - 

Usage:
php examples/bcompiler_compiler.php location/of/my/php/class.php

This will take the class.php file, try and work out all the depandant classes, (eg. via includes, requires etc.) and bulid a single binary class.php.phb 

to use this,
write a small program.
#!/usr/bin/php
<?
dl('bcompiler.so');
dl('curl.so'); // do all your module loading here 

bcompiler_load('location/of/my/php/class.php.phb');
// call the main method of myclass, or do what you like here...
myclass::main();

----------------------------------------------------------
Know Issues.

Defines - if they are outside the class, then they will not get declared
*workaround = put them in the class somewhere and use if(defined('xxx'))
*todo = probably in the bcompiler_compiler.php replace them with the real value.

PHP compiled with --enable-debug (PHP4.3-dev 7th Sept 2002)
There appears to be something in the bcompiler that leaks a very small amount of memory (php normally clears this up ok), however if you use php with --enable-debug, it will display a warning and segfault php.. - does not happen unless you enable-debug 


