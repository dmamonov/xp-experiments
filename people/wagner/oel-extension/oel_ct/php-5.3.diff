Index: src/oel/oel.c
===================================================================
--- src/oel/oel.c	(revision 10494)
+++ src/oel/oel.c	(working copy)
@@ -7,6 +7,9 @@
 #include "php.h"
 #include "php_oel.h"
 
+#include "Zend/zend_exceptions.h"
+#include "Zend/zend_compile.h"
+
 /* Global resource list id */
 int le_oel_oar;
 int le_oel_fun;
@@ -410,8 +413,13 @@
     memset(node, '\0', sizeof(znode));
     oel_stack_push_extvar(res_op_array, node TSRMLS_CC);
     node->op_type= IS_CONST;
+#if ZEND_MODULE_API_NO >= 20071006
+    Z_SET_REFCOUNT(node->u.constant, 1);
+    Z_SET_ISREF_TO(node->u.constant, 0);
+#else
     node->u.constant.refcount= 1;
     node->u.constant.is_ref= 0;
+#endif
     node->u.EA.type= 0;
     return node;
 }
Index: src/oel/oel_operation.c
===================================================================
--- src/oel/oel_operation.c	(revision 10494)
+++ src/oel/oel_operation.c	(working copy)
@@ -129,7 +129,13 @@
 
     env= oel_env_prepare(res_op_array TSRMLS_CC);
     zend_check_writable_variable(operand);
-    zend_do_end_variable_parse(BP_VAR_RW, 0 TSRMLS_CC);
+    
+#if ZEND_MODULE_API_NO >= 20071006
+    zend_do_end_variable_parse(operand, BP_VAR_RW, 0 TSRMLS_CC);
+#else
+	zend_do_end_variable_parse(BP_VAR_RW, 0 TSRMLS_CC);
+#endif
+
     if (is_incdec_post_op(arg_operation)) zend_do_post_incdec(result, operand, arg_operation TSRMLS_CC);
     else zend_do_pre_incdec(result, operand, arg_operation TSRMLS_CC);
     oel_env_restore(res_op_array, env TSRMLS_CC);
@@ -154,7 +160,13 @@
         if (!oel_token_isa(res_op_array TSRMLS_CC, 1, OEL_TYPE_TOKEN_VARIABLE)) oel_compile_error(E_ERROR, "assigning binary op without oel_add_begin_variable_parse");
         oel_stack_pop_token(res_op_array TSRMLS_CC);
         zend_check_writable_variable(lefthand);
-        zend_do_end_variable_parse(BP_VAR_RW, 0 TSRMLS_CC);
+        
+#if ZEND_MODULE_API_NO >= 20071006
+    zend_do_end_variable_parse(lefthand, BP_VAR_RW, 0 TSRMLS_CC);
+#else
+	zend_do_end_variable_parse(BP_VAR_RW, 0 TSRMLS_CC);
+#endif
+
         zend_do_binary_assign_op(arg_operation, result, lefthand, righthand TSRMLS_CC);
     } else {
         zend_do_binary_op(arg_operation, result, lefthand, righthand TSRMLS_CC);
Index: src/oel/oel_trycatch.c
===================================================================
--- src/oel/oel_trycatch.c	(revision 10494)
+++ src/oel/oel_trycatch.c	(working copy)
@@ -57,7 +57,11 @@
     env= oel_env_prepare(res_op_array TSRMLS_CC);
     catch_token->u.opline_num= get_next_op_number(res_op_array->oel_cg.active_op_array);
     zend_do_fetch_class(catch_class, catch_class TSRMLS_CC);
+#if ZEND_MODULE_API_NO >= 20071006
+    zend_do_begin_catch(try_token, catch_class, catch_var, first_catch_token TSRMLS_CC);
+#else
     zend_do_begin_catch(try_token, catch_class, catch_var, 1 TSRMLS_CC);
+#endif
     oel_env_restore(res_op_array, env TSRMLS_CC);
 }
 
Index: src/oel/oel_core.c
===================================================================
--- src/oel/oel_core.c	(revision 10494)
+++ src/oel/oel_core.c	(working copy)
@@ -258,7 +258,11 @@
     expr= oel_stack_pop_operand(res_op_array TSRMLS_CC);
 
     env= oel_env_prepare(res_op_array TSRMLS_CC);
-    zend_do_end_variable_parse(BP_VAR_UNSET, 0 TSRMLS_CC);
+#if ZEND_MODULE_API_NO >= 20071006
+    zend_do_end_variable_parse(expr, BP_VAR_UNSET, 0 TSRMLS_CC);
+#else
+	zend_do_end_variable_parse(BP_VAR_UNSET, 0 TSRMLS_CC);
+#endif
     zend_do_unset(expr TSRMLS_CC);
     oel_env_restore(res_op_array, env TSRMLS_CC);
 }
Index: src/oel/oel_procedure.c
===================================================================
--- src/oel/oel_procedure.c	(revision 10494)
+++ src/oel/oel_procedure.c	(working copy)
@@ -161,7 +161,11 @@
     oel_stack_push_operand(res_op_array, result TSRMLS_CC);
 
     env= oel_env_prepare(res_op_array TSRMLS_CC);
+#if ZEND_MODULE_API_NO >= 20071006
+    is_dynamic= zend_do_begin_function_call(func_name, 0 TSRMLS_CC);
+#else
     is_dynamic= zend_do_begin_function_call(func_name TSRMLS_CC);
+#endif
     oel_build_call_parameter_pass(res_op_array, params TSRMLS_CC);
     zend_do_end_function_call(func_name, result, parameter_count, 0, is_dynamic TSRMLS_CC);
     zend_do_extended_fcall_end(TSRMLS_C);
@@ -186,7 +190,13 @@
     result= func_name;
 
     env= oel_env_prepare(res_op_array TSRMLS_CC);
+    
+#if ZEND_MODULE_API_NO >= 20071006
+    zend_do_begin_dynamic_function_call(func_name, 0 TSRMLS_CC);
+#else
     zend_do_begin_dynamic_function_call(func_name TSRMLS_CC);
+#endif
+
     oel_build_call_parameter_pass(res_op_array, params TSRMLS_CC);
     zend_do_end_function_call(func_name, result, parameter_count, 0, 1 TSRMLS_CC);
     zend_do_extended_fcall_end(TSRMLS_C);
Index: src/oel/oel_operands.c
===================================================================
--- src/oel/oel_operands.c	(revision 10494)
+++ src/oel/oel_operands.c	(working copy)
@@ -76,7 +76,11 @@
     oel_stack_pop_token(res_op_array TSRMLS_CC);
 
     env= oel_env_prepare(res_op_array TSRMLS_CC);
-    zend_do_end_variable_parse(BP_VAR_R, 0 TSRMLS_CC);
+#if ZEND_MODULE_API_NO >= 20071006
+    zend_do_end_variable_parse(NULL, BP_VAR_R, 0 TSRMLS_CC);  /* FIXME */
+#else
+	zend_do_end_variable_parse(BP_VAR_R, 0 TSRMLS_CC);
+#endif
     oel_env_restore(res_op_array, env TSRMLS_CC);
 }
 
@@ -196,9 +200,17 @@
     env= oel_env_prepare(res_op_array TSRMLS_CC);
     if (arg_classname_len) {
         zend_do_fetch_class(class, classname TSRMLS_CC);
+#if ZEND_MODULE_API_NO >= 20071006
+        zend_do_fetch_constant(result, class, name, ZEND_RT, 0 TSRMLS_CC);
+#else
         zend_do_fetch_constant(result, class, name, ZEND_RT TSRMLS_CC);
+#endif
     } else {
+#if ZEND_MODULE_API_NO >= 20071006
+        zend_do_fetch_constant(result, NULL, name, ZEND_RT, 0 TSRMLS_CC);
+#else
         zend_do_fetch_constant(result, NULL, name, ZEND_RT TSRMLS_CC);
+#endif
     }
     oel_env_restore(res_op_array, env TSRMLS_CC);
 }
