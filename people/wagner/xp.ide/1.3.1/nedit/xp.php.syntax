! INSTALLATION
!
! Load these macros and/or background menu commands by starting nedit with:
!
!       nedit -import <name of this file>
!
! Then, check that the macros and/or background menu commands were loaded
! correctly, and choose Save Defaults from the Preferences menu.  The new
! macros and/or background menu commands will now be incorporated into your
! own nedit.rc file, so the next time you start NEdit, you will no longer need
! to use -import.
!
! These comments will not appear in your nedit.rc file

nedit.highlightPatterns: \
	PHP:1:0{\n\
		phptags:"\\<\\?php":"\\?\\>"::Plain::\n\
		doccomment:"/\\*\\*":"\\*/"::Comment:phptags:\n\
		doccommenttag:"@(access|return|throws|see|model|purpose|deprecated|ext|platform|param|test)":::Text Escape:doccomment:\n\
		comment:"/\\*":"\\*/"::Text Arg2:phptags:\n\
		inlinecomment:"//":"$"::Comment:phptags:\n\
		double quote strings:"""":""""::String:phptags:\n\
		dq string esc chars:"\\\\(.|\\n)":::String1:double quote strings:\n\
		single quote strings:"'":"'"::String:phptags:\n\
		sq string esc chars:"\\\\(.|\\n)":::String1:single quote strings:\n\
		ignore escaped chars:"\\\\[#""'\\$msytq]":::Plain:phptags:\n\
		keywords:"<(isset|use|const|with|raise|not|enum|is_a|namespace|package|interface|implements|instanceof|try|catch|throw|finally|cast|unset|extends|uses|operator|error_reporting|class|switch|include|case|default|define|array|var|global|list|c?function|new|if|until|while|elseif|else|eval|for|foreach|continue|exit|die|return|require|not|\\|\\||\\&\\&|and|or|!==?|===?)>":::Keyword:phptags:\n\
		classkeywords:"<(public|private|protected|static|abstract|final|__destruct|__construct|__call|__set|__get|__invoke|parent|self|const)>":::Text Escape:phptags:\n\
		variables:"(::)?[$](\\{[^}]*}|[^a-zA-Z0-9_ /\\t\\n\\.,\\\\[\\\\{\\\\(]|[0-9]+|[a-zA-Z_][a-zA-Z0-9_]*)?":::Plain:phptags:\n\
		braces and parens:"[\\[\\]{}\\(\\)]":::Text Arg2:phptags:\n\
		heredoc:"\\<\\<\\<__":"^__"::Text Key1:phptags:\n\
		classname:"([A-Za-z_Â·\\\\:]+)?(::)([A-Za-z_]+)":::String1:phptags:\n\
		classnameseperator:"\\2":""::Pointer:classname:C\n\
		knownconstants:"(NULL|FALSE|TRUE)":::Text Arg1:phptags:\n\
		constants:"(<[A-Z_0-9]+>)":::Text Arg2:phptags:\n\
		annotation:"@([a-zA-Z]+)(\\('[^']+'\\))?":::Text Comment:phptags:\n\
	}\n\
		XP:1:0{\n\
		package_statement:"package ([^ ]+)":::Keyword::\n\
		keywords:"<(isset|const|with|in|void|enum|instanceof|namespace|package|import|interface|package|implements|instanceof|try|catch|throw|finally|cast|unset|extends|operator|class|switch|case|default|throws|var|new|if|do|while|else|for|foreach|continue|return|\\|\\||\\&\\&|!==?|===?)>":::Keyword::\n\
		classkeywords:"<(public|private|protected|native|inline|static|abstract|final|__destruct|__construct|__call|__set|__get|parent|self|this)>":::Text Escape::\n\
		variables:"(::)?[$](\\{[^}]*}|[^a-zA-Z0-9_\\r/\\t\\n\\.,\\\\[\\\\{\\\\(]|[0-9]+|[a-zA-Z_][a-zA-Z0-9_]*)?":::Text Arg::\n\
		braces and parens:"[\\[\\]{}\\(\\)]":::Subroutine::\n\
		single quote strings:"'":"'"::String::\n\
		annotation:"@([a-zA-Z]+)(\\('[^']+'\\))?":::Text Comment::\n\
		constants:"(NULL|FALSE|TRUE|<[A-Z_]+>)":::Ada Attributes::\n\
		doccomment:"/\\*\\*":"\\*/"::Comment::\n\
		doccommenttag:"@(throws|see|return|param)":::Plain:doccomment:\n\
		comment:"/\\*":"\\*/"::Text Arg2::\n\
		inlinecomment:"//	":"$"::Comment::\n\
		number:"<-?[0-9]+>":::Preprocessor1::\n\
		double quote strings:"""":""""::String::\n\
		dq string esc chars:"\\\\(.|\\n)":::Plain:double quote strings:\n\
		sq string esc chars:"\\\\(.|\\n)":::String:single quote strings:\n\
		package_name:"\\1":""::Preprocessor:package_statement:C\n\
	}
nedit.languageModes: \
	PHP:.php .php3 .phtml .php4 .inc .ciml:"\\<\\?php"::::::\n\
	XP:.xp:::::::

