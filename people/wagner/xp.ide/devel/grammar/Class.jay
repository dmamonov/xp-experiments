%{

  uses(
    'xp.ide.source.Scope',
    'xp.ide.source.element.Classdef',
    'xp.ide.source.element.Classmember',
    'xp.ide.source.element.Classconstant',
    'xp.ide.source.element.Array',
    'xp.ide.source.element.BlockComment'
  );

%}


%token
  T_ENCAPSED_STRING T_NUMBER T_STRING T_VARIABLE T_ARRAY
  T_NULL T_PUBLIC T_PRIVATE T_PROTECTED T_CONST T_STATIC
  T_BOOLEAN

%%

start:
   classConstantList classMemberScopes { $$= new xp·ide·source·element·Classdef(); $$->setConstants($1); $$->setMembers($2); }
  | classConstantList { $$= new xp·ide·source·element·Classdef(); $$->setConstants($1); }
  | classMemberScopes { $$= new xp·ide·source·element·Classdef(); $$->setMembers($1); }
  | { $$= new xp·ide·source·element·Classdef(); }
;

classConstantList:
  classConstantList T_CONST classConstants ';' { $$= array_merge($1, $3); }
  | T_CONST classConstants ';' { $$= $2; }
;
classConstants:
  classConstants ',' T_STRING '=' initAssignRight { $1[]= new xp·ide·source·element·Classconstant($3->getValue()); $$= $1; };
  | T_STRING '=' initAssignRight { $$= array(new xp·ide·source·element·Classconstant($1->getValue())); }
;

classMemberScopes:
  classMemberScopes classMemberMods classMembers ';' { foreach($3 as $m) { $m->setStatic($2['static']); $m->setScope($2['scope']); } $$= array_merge($1,$3); }
  | classMemberMods classMembers ';' { foreach($2 as $m) { $m->setStatic($1['static']); $m->setScope($1['scope']); } $$= $2; }
;
classMembers:
  classMembers ',' classMember { $1[]= $3; $$= $1;}
  | classMember { $$= array($1); }
;
classMember:
  T_VARIABLE '=' initAssignRight { $$= new xp·ide·source·element·Classmember(substr($1->getValue(), 1), NULL, $3); }
  | T_VARIABLE { $$= new xp·ide·source·element·Classmember(substr($1->getValue(), 1)); }


classMemberMods:
  scope T_STATIC { $$= array('scope' => $1, 'static' => TRUE); }
  | T_STATIC scope { $$= array('scope' => $2, 'static' => TRUE); }
  | T_STATIC { $$= array('scope' => xp·ide·source·Scope::$PUBLIC, 'static' => TRUE); }
  | scope { $$= array('scope' => $1, 'static' => FALSE); }
  | { $$= array('scope' => xp·ide·source·Scope::$PUBLIC, 'static' => FALSE); }
;

scope:
  T_PUBLIC { $$= xp·ide·source·Scope::$PUBLIC; }
  | T_PRIVATE { $$= xp·ide·source·Scope::$PRIVATE; }
  | T_PROTECTED { $$= xp·ide·source·Scope::$PROTECTED; }
;

initAssignRight:
  T_ARRAY '(' initArrayBody ')' { $$= new xp·ide·source·element·Array($3); }
  | T_ARRAY '(' ')' { $$= new xp·ide·source·element·Array(); }
  | T_ENCAPSED_STRING { $$= $1->getValue(); }
  | T_NULL { $$= $1->getValue(); }
  | T_NUMBER { $$= $1->getValue(); }
  | T_BOOLEAN { $$= $1->getValue(); }
;

initArrayBody:
  initArrayBody "," initAssignRight { $1[]= $3; $$= $1; }
  | initAssignRight { $$= array($1); }
;

%%
