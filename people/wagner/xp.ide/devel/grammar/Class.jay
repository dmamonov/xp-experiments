%{

  uses(
    'xp.ide.source.Scope',
    'xp.ide.source.element.Classmembergroup',
    'xp.ide.source.element.Classmember',
    'xp.ide.source.element.Classmethod',
    'xp.ide.source.element.Classconstant',
    'xp.ide.source.element.Classmethodparam',
    'xp.ide.source.element.Array',
    'xp.ide.source.element.BlockComment',
    'xp.ide.source.element.Apidoc',
    'xp.ide.source.element.Annotation'
  );

%}


%token
  T_ENCAPSED_STRING T_NUMBER T_STRING T_VARIABLE T_ARRAY
  T_NULL T_BOOLEAN T_DOUBLE_ARROW T_FUNCTION T_FUNCTION_BODY
  T_OPEN_APIDOC T_CONTENT_APIDOC T_CLOSE_APIDOC T_DIRECTIVE_APIDOC
  T_START_ANNOTATION T_CLOSE_ANNOTATION T_ANNOTATION

%right
  T_PUBLIC T_PRIVATE T_PROTECTED T_CONST T_STATIC T_ABSTRACT

%%

start:
  classConstantList classMemberScopes classMethods { $$= $this->top_element; $$->setConstants($1); $$->setMembergroups($2); $$->setMethods($3); }
  | classMemberScopes classMethods { $$= $this->top_element; $$->setMembergroups($1); $$->setMethods($2); }
  | classConstantList classMethods { $$= $this->top_element; $$->setConstants($1); $$->setMethods($2); }
  | classConstantList classMemberScopes { $$= $this->top_element; $$->setConstants($1); $$->setMembergroups($2); }
  | classConstantList { $$= $this->top_element; $$->setConstants($1); }
  | classMemberScopes { $$= $this->top_element; $$->setMembergroups($1); }
  | classMethods { $$= $this->top_element; $$->setMethods($1); }
  | { $$= $this->top_element; }
;

classMethods:
  classMethods classMethod { $$= $1; $$[]= $2; }
  | classMethod { $$= array($1); }
;

classMethod:
  apidoc annotationblock classMethodMods methodDec {
    $$= $4;
    $$->setApidoc($1);
    $$->setAnnotations($2);
    isset($3['abstract']) && $$->setAbstract($3['abstract']);
    isset($3['scope'])    && $$->setScope($3['scope']);
    isset($3['static'])   && $$->setStatic($3['static']);
  }
  | apidoc classMethodMods methodDec {
    $$= $3;
    $$->setApidoc($1);
    isset($2['abstract']) && $$->setAbstract($2['abstract']);
    isset($2['scope'])    && $$->setScope($2['scope']);
    isset($2['static'])   && $$->setStatic($2['static']);
  }
  | apidoc annotationblock methodDec { $$= $3; $$->setApidoc($1); $$->setAnnotations($2); }
  | annotationblock classMethodMods methodDec {
    $$= $3;
    $$->setAnnotations($1);
    isset($2['abstract']) && $$->setAbstract($2['abstract']);
    isset($2['scope'])    && $$->setScope($2['scope']);
    isset($2['static'])   && $$->setStatic($2['static']);
  }
  | apidoc methodDec { $$= $2; $$->setApidoc($1); }
  | classMethodMods methodDec {
    $$= $2;
    isset($1['abstract']) && $$->setAbstract($1['abstract']);
    isset($1['scope'])    && $$->setScope($1['scope']);
    isset($1['static'])   && $$->setStatic($1['static']);
  }
  | annotationblock methodDec { $$= $2;  $$->setAnnotations($1); }
  | methodDec { $$= $1; }
;

methodDec:
  T_FUNCTION T_STRING classMethodParamDef '{' T_FUNCTION_BODY '}' {
    $$= new xp·ide·source·element·Classmethod($2->getValue());
    $$->setParams($3);
    $$->setContent($5->getValue());
  }
;

annotationblock:
  T_START_ANNOTATION annotations T_CLOSE_ANNOTATION { $$= $2;}
;
annotations:
  annotations ',' annotation { $$= $1; $$[]= $3; }
  | annotation { $$= array($1); }
;
annotation:
  T_ANNOTATION '(' annotationparams ')' { $$= new xp·ide·source·element·Annotation(substr($1->getValue(), 1), $3); }
  | T_ANNOTATION '(' ')' { $$= new xp·ide·source·element·Annotation(substr($1->getValue(), 1)); }
  | T_ANNOTATION { $$= new xp·ide·source·element·Annotation(substr($1->getValue(), 1)); }
;
annotationparams:
  annotationparams ',' annotationparam { $$= $1; list($k, $v)= each($3); $$[$k]= $v; }
  | annotationparam { $$= $1; }
;
annotationparam:
  T_STRING '=' T_ENCAPSED_STRING { $$= array($1->getValue() => $this->unquote($3->getValue())); }
  | T_ENCAPSED_STRING { $$= array($this->unquote($1->getValue())); }
;

apidoc:
  T_OPEN_APIDOC T_CONTENT_APIDOC apidocDirectives T_CLOSE_APIDOC { $$= new xp·ide·source·element·Apidoc(); $$->setText($2->getValue()); $$->setDirectives($3); }
  | T_OPEN_APIDOC T_CONTENT_APIDOC T_CLOSE_APIDOC { $$= new xp·ide·source·element·Apidoc(); $$->setText($2->getValue()); }
;

apidocDirectives:
  apidocDirectives T_DIRECTIVE_APIDOC { $$= $1; $$[]= new xp·ide·source·element·ApidocDirective($2->getValue()); }
  | T_DIRECTIVE_APIDOC { $$= array(new xp·ide·source·element·ApidocDirective($1->getValue())); }
;

classMethodParamDef:
  '(' classMethodParams ')' { $$= $2; }
  | '(' ')' { $$= array(); }
;

classMethodParams:
  classMethodParams ',' classMethodParam { $$= $1; $$[]= $3; }
  | classMethodParam { $$= array($1); }
;

classMethodParam:
  typehint T_VARIABLE '=' initAssignRight { $$= new xp·ide·source·element·Classmethodparam(substr($2->getValue(), 1), $1); $$->setInit($4); }
  | typehint T_VARIABLE { $$= new xp·ide·source·element·Classmethodparam(substr($2->getValue(), 1), $1); }
  | T_VARIABLE '=' initAssignRight { $$= new xp·ide·source·element·Classmethodparam(substr($1->getValue(), 1)); $$->setInit($3); }
  | T_VARIABLE { $$= new xp·ide·source·element·Classmethodparam(substr($1->getValue(), 1)); }
;

typehint:
  T_STRING { $$= $1->getValue(); }
  | T_ARRAY { $$= $1->getValue(); }
;

classMethodMods:
  classMethodMods classMethodMod { $$= array_merge($1, $2); }
  | classMethodMod { $$= $1; }
;

classMethodMod:
  T_ABSTRACT { $$= array('abstract' => TRUE); }
  | classMemberMod { $$= $1; }
;

classConstantList:
  classConstantList T_CONST classConstants ';' { $$= array_merge($1, $3); }
  | T_CONST classConstants ';' { $$= $2; }
;

classConstants:
  classConstants ',' T_STRING '=' initAssignRight { $1[]= new xp·ide·source·element·Classconstant($3->getValue()); $$= $1; };
  | T_STRING '=' initAssignRight { $$= array(new xp·ide·source·element·Classconstant($1->getValue())); }
;

classMemberScopes:
  classMemberScopes classMemberMods classMembers ';' {
    $$= $1;
    $$[]= $cg= new xp·ide·source·element·Classmembergroup();
    $cg->setMembers($3);
    isset($2['static']) && $cg->setStatic($2['static']);
    isset($2['scope'])  && $cg->setScope($2['scope']);
  }
  | classMemberScopes classMembers ';' {
    $$= $1;
    $$[]= $cg= new xp·ide·source·element·Classmembergroup();
    $cg->setMembers($2);
  }
  | classMemberMods classMembers ';' {
    $$= new xp·ide·source·element·Classmembergroup();
    isset($1['static']) && $$->setStatic($1['static']);
    isset($1['scope'])  && $$->setScope($1['scope']);
    $$->setMembers($2);
    $$= array($$);
  }
  | classMembers ';' {
    $$= new xp·ide·source·element·Classmembergroup();
    $$->setMembers($1);
    $$= array($$);
  }
;

classMembers:
  classMembers ',' classMember { $1[]= $3; $$= $1;}
  | classMember { $$= array($1); }
;

classMember:
  T_VARIABLE '=' initAssignRight { $$= new xp·ide·source·element·Classmember(substr($1->getValue(), 1), $3); }
  | T_VARIABLE { $$= new xp·ide·source·element·Classmember(substr($1->getValue(), 1)); }


classMemberMods:
  classMemberMods classMemberMod { $$= array_merge($1, $2); }
  | classMemberMod { $$= $1; }
;

classMemberMod:
  scope { $$= array('scope' => $1); }
  | T_STATIC { $$= array('static' => TRUE); }
;

scope:
  T_PUBLIC { $$= xp·ide·source·Scope::$PUBLIC; }
  | T_PRIVATE { $$= xp·ide·source·Scope::$PRIVATE; }
  | T_PROTECTED { $$= xp·ide·source·Scope::$PROTECTED; }
;

initSimple:
  T_ENCAPSED_STRING { $$= $1->getValue(); }
  | T_NULL { $$= $1->getValue(); }
  | T_NUMBER { $$= $1->getValue(); }
  | T_BOOLEAN { $$= $1->getValue(); }
;

initAssignRight:
  T_ARRAY '(' initArrayBody ',' ')' { $$= new xp·ide·source·element·Array($3); }
  | T_ARRAY '(' initArrayBody ')' { $$= new xp·ide·source·element·Array($3); }
  | T_ARRAY '(' ')' { $$= new xp·ide·source·element·Array(); }
  | initSimple  { $$= $1; }
;

initArrayBody:
  initArrayBody "," initSimple T_DOUBLE_ARROW initAssignRight { $1[$3]= $5; $$= $1; }
  | initArrayBody "," initAssignRight { $1[]= $3; $$= $1; }
  | initSimple T_DOUBLE_ARROW initAssignRight { $$= array($1 => $3); }
  | initAssignRight { $$= array($1); }
;
%%
