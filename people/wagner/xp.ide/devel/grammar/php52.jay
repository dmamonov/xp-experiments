%{

  $package= 'xp.ide.source.parser';

  uses(
    'xp.ide.source.parser.ParserHelper',
    'xp.ide.source.Scope',
    'xp.ide.source.element.Package',
    'xp.ide.source.element.Uses',
    'xp.ide.source.element.Classdef',
    'xp.ide.source.element.Classmember',
    'xp.ide.source.element.Classconstant',
    'xp.ide.source.element.ClassFile',
    'xp.ide.source.element.BlockComment'
  );

%}

%token
  T_CLASS T_CLOSE_BCOMMENT T_CLOSE_TAG T_CONTENT_BCOMMENT T_ENCAPSED_STRING
  T_EXTENDS T_IMPLEMENTS T_NUMBER T_OPEN_BCOMMENT T_OPEN_TAG T_STRING T_USES
  T_VARIABLE T_ARRAY T_NULL T_PUBLIC T_PRIVATE T_PROTECTED T_CONST T_STATIC
  T_OPEN_INNERBLOCK T_CONTENT_INNERBLOCK T_CLOSE_INNERBLOCK

%%

start:
  T_OPEN_TAG meta classDef T_CLOSE_TAG { $$= $2; $$->setClassdef($3); }
  | T_OPEN_TAG classDef T_CLOSE_TAG { $$= new xp·ide·source·element·ClassFile(); $$->setClassdef($2); }
;

classDef:
  blockComment T_CLASS T_STRING T_EXTENDS T_STRING classBody {
    $$= $6;
    $$->setName($3->getValue());
    $$->setParent($5->getValue());
  }
  | blockComment T_CLASS T_STRING T_EXTENDS T_STRING T_IMPLEMENTS interfaces classBody {
    $$= $8;
    $$->setName($3->getValue());
    $$->setParent($5->getValue());
    $$->setInterfaces($7);
  }
;
interfaces:
  interfaces ',' T_STRING { $1[]= $3->getValue(); $$= $1; }
  | T_STRING { $$= array($1->getValue()); }
;

classBody:
  '{' classConstantList classMemberScopes '}' { $$= new xp·ide·source·element·Classdef(); $$->setConstants($2); $$->setMembers($3); }
  | '{' classConstantList '}' { $$= new xp·ide·source·element·Classdef(); $$->setConstants($2); }
  | '{' classMemberScopes '}' { $$= new xp·ide·source·element·Classdef(); $$->setMembers($2); }
  | '{' '}' { $$= new xp·ide·source·element·Classdef(); }
;

classConstantList:
  classConstantList T_CONST classConstants ';' { $$= array_merge($1, $3); }
  | T_CONST classConstants ';' { $$= $2; }
;
classConstants:
  classConstants ',' T_STRING '=' initAssignRight { $1[]= new xp·ide·source·element·Classconstant($3->getValue()); $$= $1; };
  | T_STRING '=' initAssignRight { $$= array(new xp·ide·source·element·Classconstant($1->getValue())); }
;

classMemberScopes:
  classMemberScopes classMemberMods classMembers ';' { foreach($3 as $m) { $m->setStatic($2['static']); $m->setScope($2['scope']); } $$= array_merge($1,$3); }
  | classMemberMods classMembers ';' { foreach($2 as $m) { $m->setStatic($1['static']); $m->setScope($1['scope']); } $$= $2; }
;
classMembers:
  classMembers ',' classMember { $1[]= $3; $$= $1;}
  | classMember { $$= array($1); }
;
classMember:
  T_VARIABLE '=' initAssignRight { $$= new xp·ide·source·element·Classmember(substr($1->getValue(), 1)); }
  | T_VARIABLE { $$= new xp·ide·source·element·Classmember(substr($1->getValue(), 1)); }

meta:
  blockComment package uses { $$= new xp·ide·source·element·ClassFile(); $$->setHeader($1); $$->setPackage($2); $$->setUses($3); }
  | blockComment package { $$= new xp·ide·source·element·ClassFile(); $$->setHeader($1); $$->setPackage($2); }
  | blockComment uses { $$= new xp·ide·source·element·ClassFile(); $$->setHeader($1); $$->setUses($2); }
  | package uses { $$= new xp·ide·source·element·ClassFile(); $$->setPackage($1); $$->setUses($2); }
  | blockComment { $$= new xp·ide·source·element·ClassFile(); $$->setHeader($1); }
  | package { $$= new xp·ide·source·element·ClassFile(); $$->setPackage($1); }
  | uses { $$= new xp·ide·source·element·ClassFile(); $$->setUses($1); }
;

package:
  T_VARIABLE '=' T_ENCAPSED_STRING ';'  { $$= new xp·ide·source·element·Package(); $$->setPathname(xp·ide·source·parser·ParserHelper::unquote($3->getValue())); }
;

uses:
  T_USES '(' usesClasses ')' ';'  { $$= new xp·ide·source·element·Uses(); $$->setClassnames($3); }
;
usesClasses:
  usesClasses ',' T_ENCAPSED_STRING { $1[]= xp·ide·source·parser·ParserHelper::unquote($3->getValue()); $$= $1; }
  | T_ENCAPSED_STRING { $$= array(xp·ide·source·parser·ParserHelper::unquote($1->getValue())); }
;

blockComment:
  T_OPEN_BCOMMENT T_CONTENT_BCOMMENT T_CLOSE_BCOMMENT { $$= new xp·ide·source·element·BlockComment(); $$->setText($2->getValue()); }
;

classMemberMods:
  scope T_STATIC { $$= array('scope' => $1, 'static' => TRUE); }
  | T_STATIC scope { $$= array('scope' => $2, 'static' => TRUE); }
  | T_STATIC { $$= array('scope' => xp·ide·source·Scope::$PUBLIC, 'static' => TRUE); }
  | scope { $$= array('scope' => $1, 'static' => FALSE); }
  | { $$= array('scope' => xp·ide·source·Scope::$PUBLIC, 'static' => FALSE); }
;

scope:
  T_PUBLIC { $$= xp·ide·source·Scope::$PUBLIC; }
  | T_PRIVATE { $$= xp·ide·source·Scope::$PRIVATE; }
  | T_PROTECTED { $$= xp·ide·source·Scope::$PROTECTED; }
;

initAssignRight:
  T_ARRAY '(' ')' | T_STRING | T_NULL | T_NUMBER
;

%%
